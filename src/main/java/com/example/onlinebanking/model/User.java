package com.example.onlinebanking.model;

import jakarta.persistence.*;

import java.util.Set;

/**
 * Represents a user entity in the system.
 * This class is used to store user information such as username, password, role, and associated accounts.
 * It is mapped to a database table using JPA annotations.
 *
 * @author Your Name
 * @version 1.0
 * @since 2023-10-01
 */
@Entity
public class User {

    /**
     * The unique identifier for the user.
     * This field is automatically generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The username of the user.
     * This field must be unique and cannot be null.
     */
    @Column(unique = true, nullable = false)
    private String username;

    /**
     * The password of the user.
     * This field cannot be null.
     */
    @Column(nullable = false)
    private String password;

    /**
     * The role of the user.
     * This field cannot be null and typically has values like "USER" or "ADMIN".
     */
    @Column(nullable = false)
    private String role;

    /**
     * A set of accounts associated with the user.
     * This field represents a one-to-many relationship with the Account entity.
     * The accounts are lazily fetched and cascading operations are applied.
     */
    @OneToMany(mappedBy = "user", cascade = CascadeType.ALL, fetch = FetchType.LAZY)
    private Set<Account> accounts;

    /**
     * Gets the unique identifier of the user.
     *
     * @return the user's ID.
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier of the user.
     *
     * @param id the user's ID.
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the username of the user.
     *
     * @return the username.
     */
    public String getUsername() {
        return username;
    }

    /**
     * Sets the username of the user.
     *
     * @param username the username.
     */
    public void setUsername(String username) {
        this.username = username;
    }

    /**
     * Gets the password of the user.
     *
     * @return the password.
     */
    public String getPassword() {
        return password;
    }

    /**
     * Sets the password of the user.
     *
     * @param password the password.
     */
    public void setPassword(String password) {
        this.password = password;
    }

    /**
     * Gets the role of the user.
     *
     * @return the role.
     */
    public String getRole() {
        return role;
    }

    /**
     * Sets the role of the user.
     *
     * @param role the role.
     */
    public void setRole(String role) {
        this.role = role;
    }

    /**
     * Gets the set of accounts associated with the user.
     *
     * @return the set of accounts.
     */
    public Set<Account> getAccounts() {
        return accounts;
    }

    /**
     * Sets the set of accounts associated with the user.
     *
     * @param accounts the set of accounts.
     */
    public void setAccounts(Set<Account> accounts) {
        this.accounts = accounts;
    }
}